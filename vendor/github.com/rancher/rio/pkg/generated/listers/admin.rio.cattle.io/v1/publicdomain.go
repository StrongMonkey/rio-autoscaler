/*
Copyright 2019 Rancher Labs.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by main. DO NOT EDIT.

package v1

import (
	v1 "github.com/rancher/rio/pkg/apis/admin.rio.cattle.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PublicDomainLister helps list PublicDomains.
type PublicDomainLister interface {
	// List lists all PublicDomains in the indexer.
	List(selector labels.Selector) (ret []*v1.PublicDomain, err error)
	// Get retrieves the PublicDomain from the index for a given name.
	Get(name string) (*v1.PublicDomain, error)
	PublicDomainListerExpansion
}

// publicDomainLister implements the PublicDomainLister interface.
type publicDomainLister struct {
	indexer cache.Indexer
}

// NewPublicDomainLister returns a new PublicDomainLister.
func NewPublicDomainLister(indexer cache.Indexer) PublicDomainLister {
	return &publicDomainLister{indexer: indexer}
}

// List lists all PublicDomains in the indexer.
func (s *publicDomainLister) List(selector labels.Selector) (ret []*v1.PublicDomain, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PublicDomain))
	})
	return ret, err
}

// Get retrieves the PublicDomain from the index for a given name.
func (s *publicDomainLister) Get(name string) (*v1.PublicDomain, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("publicdomain"), name)
	}
	return obj.(*v1.PublicDomain), nil
}
